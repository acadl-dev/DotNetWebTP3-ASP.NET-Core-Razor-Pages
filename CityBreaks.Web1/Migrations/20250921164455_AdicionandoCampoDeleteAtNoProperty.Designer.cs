// <auto-generated />
using System;
using CityBreaks.Web1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityBreaks.Web1.Migrations
{
    [DbContext(typeof(CityBreaksContext))]
    [Migration("20250921164455_AdicionandoCampoDeleteAtNoProperty")]
    partial class AdicionandoCampoDeleteAtNoProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CityBreaks.Web1.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_city");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "João Pessoa"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Fortaleza"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Lion"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Bordéus"
                        });
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_country");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "BR",
                            CountryName = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "AR",
                            CountryName = "Argentina"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "FR",
                            CountryName = "França"
                        });
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_property");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Property");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Santa Grelha",
                            PricePerNight = 210.20m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Moleska Gastrobar",
                            PricePerNight = 230.90m
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Bouchon Fiston",
                            PricePerNight = 300.00m
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            Name = "Les Pavès de Saint Jean",
                            PricePerNight = 390.90m
                        });
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.City", b =>
                {
                    b.HasOne("CityBreaks.Web1.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.Property", b =>
                {
                    b.HasOne("CityBreaks.Web1.Models.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.City", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CityBreaks.Web1.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
